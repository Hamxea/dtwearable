{
	"info": {
		"_postman_id": "44fc63d4-ceeb-4ca3-a9ca-2afd026d6dfe",
		"name": "keymind.ai.security",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/ai/security/register (register a new user)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"umit\",\n\t\"password\": \"1234\",\n\t\"role\": 0\n}"
				},
				"url": {
					"raw": "{{url}}/ai/security/register",
					"host": [
						"{{url}}"
					],
					"path": [
						"ai",
						"security",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "/ai/security/user/<id> (get user by id)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/ai/security/user/1",
					"host": [
						"{{url}}"
					],
					"path": [
						"ai",
						"security",
						"user",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "/ai/security/user/<id> (delete user by id)",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"jose\",\n\t\"password\": \"1234\"\n}"
				},
				"url": {
					"raw": "{{url}}/ai/security/user/1",
					"host": [
						"{{url}}"
					],
					"path": [
						"ai",
						"security",
						"user",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "/ai/security/login (user login)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8c0c0ed6-c206-4c88-9349-429e024e312b",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"access_token not empty\", function () {",
							"    pm.expect(jsonData.access_token).not.eql(undefined);",
							"});",
							"",
							"pm.test(\"refresh token not empty\", function () {",
							"    pm.expect(jsonData.refresh_token).not.eql(undefined);",
							"});",
							"// set access token as environement variable",
							"if (jsonData.access_token !== undefined) {",
							"    postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
							"} else {",
							"    postman.setEnvironmentVariable(\"access_token\", null);",
							"}",
							"// set refresh token as environement variable",
							"if (jsonData.refresh_token !== undefined) {",
							"    postman.setEnvironmentVariable(\"refresh_token\", jsonData.refresh_token);",
							"} else {",
							"    postman.setEnvironmentVariable(\"refresh_token\", null);",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\" : \"umit\",\n  \"password\" : \"1234\"\n}"
				},
				"url": {
					"raw": "{{url}}/ai/security/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"ai",
						"security",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "/ai/security/logout (user logout)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dc763e9b-e6c7-4ff3-9766-637976a5c64b",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{server_address}}/ai/security/logout",
					"host": [
						"{{server_address}}"
					],
					"path": [
						"ai",
						"security",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "/ai/security/refresh (refresh token)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ad818ea6-8f79-436e-b756-ad878666ae9e",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"access_token not empty\", function () {",
							"    pm.expect(jsonData.access_token).not.eql(undefined);",
							"});",
							"// set access token as environement variable",
							"if (jsonData.access_token !== undefined) {",
							"    postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
							"} else {",
							"    postman.setEnvironmentVariable(\"access_token\", null);",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{refresh_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/ai/security/refresh",
					"host": [
						"{{url}}"
					],
					"path": [
						"ai",
						"security",
						"refresh"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}